/*
 * RobotFSM.h
 *
 *  Created on: 02/04/2014
 *      Author: rgap
 */

#ifndef ROBOTFSM_H_
#define ROBOTFSM_H_

#include <opencv2/opencv.hpp>
#include "ActionControl.h"
#include "../ModelParameters.h"
#include "../globals.h"
using namespace cv;
using namespace std;

class RobotFSM {
private:

	Rect *nearestObstacle;

	ActionControl control;
	ModelParameters* P;
public:
	RobotFSM();
	void initializeDevice(std::string devicePath);
	void setParameters(ModelParameters* P_);
	void collectCan(Rect *rectNearestCan);

	bool hasPendantAction();

	void moveStraight(Rect *rectNearestCan, int W);
	void searchCan(Rect *rectNearestCan, int canCenterX, int W);

	void planWithEnvironment(Rect *rectNearestCan,
			Rect *rectNearestObstacle, Mat &imgColor);
	void avoidObstacles(Rect *rectNearestCan, Rect *rectNearestObstacle,
			int canCenterX, int obstacleCenterX, int W, int H);

	virtual ~RobotFSM();
};

#endif /* ROBOTFSM_H_ */
