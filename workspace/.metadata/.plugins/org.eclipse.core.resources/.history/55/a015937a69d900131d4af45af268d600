#ifndef DEPTHSENSING_H_
#define DEPTHSENSING_H_

#include "PointCloud.h"
#include "PointCloudRGB.h"
#include "PointCloudGrayscale.h"
#include "SACMethod/SAC_MethodXYZ.h"
//#include "CloudDownsampling/VoxelDownsampling.h"

/*! \class Class DepthSensing - DepthSensing.h
 *  \brief Entradas del sensor de profundidad
 */

class DepthSensing {

private:
	PCType* pointCloud;
	SAC_MethodXYZ sac_method;
	//VoxelDownsampling voxelDownsampling;
	float maxDepthDetected;

public:
	DepthSensing();
	void initializePointCloud(Size &szFrame);
	float getMaxDepth(VideoCapture& capture);
	void depthThresholding(Mat& world, Mat&imgMaxDepth, float maxDepth);
	////////////////////
	void colorizeDisparity(const cv::Mat& gray, cv::Mat& rgb,
			double maxDisp = -1.f, float S = 1.f, float V = 1.f);
	void cloudDownsampling();
	void segmentObstacles(Mat& imgColor, Mat& world, Mat& notObstacleBin,
			Mat &imgMaxDepth, Mat& imgObstaclesBin, Mat& imgPlane,
			float maxDistObstacle, float maxHeightFloor, float distThreshold,
			float epsAngle, int axisVal);
	void dispMapRefinement(Mat& world);
	//////////////////// PointCloud
	void visualizePointCloud();
	virtual ~DepthSensing();
};

#endif /* DEPTHSENSING_H_ */
